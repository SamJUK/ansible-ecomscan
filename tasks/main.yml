---
- name: Ensure users bin directory exists
  ansible.builtin.file:
    path: "{{ ecomscan_binary_directory }}"
    state: directory
    mode: '0755'
  when: ecomscan_binary_download

- name: Download the Ecomscan binary
  ansible.builtin.get_url:
    url: "{{ ecomscan_binary_source }}"
    dest: "{{ ecomscan_binary_path }}"
    mode: '0744'
  when: ecomscan_binary_download

- name: Perform Ecomscan
  ansible.builtin.command:
    cmd: >
      {{ ecomscan_binary_path }}
      --key={{ ecomscan_key }}
      --min-confidence={{ ecomscan_minimum_confidence }}
      --maxsize={{ ecomscan_maximum_filesize }}
      --report={{ ecomscan_report_email }}
      {{ ecomscan_deep | ternary('--deep', '') }}
      {{ ecomscan_project_root }}
  register: ecomscan_scan
  changed_when: true

- name: Summary
  ansible.builtin.debug:
    msg: "{{ ecomscan_scan.stdout_lines | select('match', '^>> Found:.*') | first }}"

- name: Assert No Malware
  ansible.builtin.assert:
    that: "'MALWARE' not in ecomscan_scan.stdout"
    success_msg: "✅ No Malware Found"
    fail_msg: "❌ Malware found"
  when: ecomscan_assert_no_malware

- name: Assert No Vulnerabilities
  ansible.builtin.assert:
    that: "'VULNERABILITY' not in ecomscan_scan.stdout"
    success_msg: "✅ No Vulnerabilities Found"
    fail_msg: "❌ Vulnerabilities Found"
  when: ecomscan_assert_no_vulnerabilities
